##What happens when you initialize a repository? Why do you need to do it?

	Initializing a repository creates a ".git" file which stores all the commits
	in that repository.
	
##How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is cache which temporarily stores files that will be committed.
	And working area stores all the files. So, staging area gives more control on which files
	we want to commit.

##How can you use the staging area to make sure you have one commit per logical
change?

	Using staging area I can compare it with the current file and repository to see
	the added logics.

##What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When i want experiment with my project but without harming the actual one.
	Branches help me to work in a seperate section so that i can do cool things
	with my project.

##How do the diagrams help you visualize the branch structure?

	It helps to show to non-linear structure of the commits.

##What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	Merging two branches helps us merge two files into one so that we can combine two
	separate features.

##What are the pros and cons of Git's automatic merging vs. always doing merges
manually?